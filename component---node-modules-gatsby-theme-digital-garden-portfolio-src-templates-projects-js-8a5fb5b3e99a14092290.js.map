{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-digital-garden/src/components/background-image.js","webpack:///./node_modules/gatsby-theme-digital-garden/src/gatsby-theme-digital-garden-portfolio/components/projects.js","webpack:///./node_modules/gatsby-theme-digital-garden-portfolio/src/templates/projects.js"],"names":["background_image","_ref","_ref$ratio","ratio","src","props","_objectWithoutPropertiesLoose","Object","core_browser_esm","_extends","css","width","height","paddingBottom","backgroundSize","backgroundPosition","backgroundImage","components_projects","projects","layout","seo","title","useOptions","_ref2","map","project","key","id","_ref3","gatsby_browser_entry","to","path","theme","display","color","textDecoration","image","index_esm","h3","mb","p","m","__webpack_exports__","data","allMdx","edges","filter","node","edge","pageQuery"],"mappings":"uXAGe,IAAAA,EAAA,SAAAC,GAAA,IAAAC,EAAAD,EAAAE,MAAGA,OAAH,IAAAD,EAAW,IAAXA,EAAkBE,EAAlBH,EAAAG,IAA0BC,sIAA1BC,CAAAL,EAAA,wBACbM,OAAAC,EAAA,EAAAD,CAAA,MAAAE,EAAA,GAAAJ,EAAA,CAEEK,IAAKA,YAAI,CACPC,MADO,OAEPC,OAFO,EAGPC,cAAeV,MAHR,IAIPW,eAJO,QAKPC,mBALO,SAMPC,gBAAe,OAAAZ,EAAA,qOCHNa,EAAA,SAAAhB,GAAA,IAAGiB,EAAHjB,EAAAiB,SAAA,OACbX,OAAAC,EAAA,EAAAD,CAAAY,EAAA,OACEZ,OAAAC,EAAA,EAAAD,CAAAa,EAAA,GACEC,MACEC,2BACIA,iCADJA,GAEI,aAGRf,OAAAC,EAAA,EAAAD,CAAA,MACEG,IAAGa,GASFL,EAAAM,IAAa,SAAAC,GAAO,OACnBlB,OAAAC,EAAA,EAAAD,CAAA,MACEmB,IAAKD,EADPE,GAEEjB,IAAGkB,GAOHrB,OAAAC,EAAA,EAAAD,CAAAsB,EAAA,GACEC,GAAIL,cADNM,KAEErB,IAAK,SAAAsB,GAAK,MAAK,CACbC,QADa,QAEbC,MAFa,UAGbC,eAAgB,UAGlB5B,OAAAC,EAAA,EAAAD,CAAAP,EAAA,CAAiBI,IAAKqB,cAAoBW,QAC1C7B,OAAAC,EAAA,EAAAD,CAAC8B,EAAA,EAADC,GAAA,CACE5B,IAAKA,YAAI,CACP6B,GAAI,KAGLd,cAdLJ,OAgBEd,OAAAC,EAAA,EAAAD,CAAC8B,EAAA,EAADG,EAAA,CAAU9B,IAAKA,YAAI,CAAE+B,EAAG,KAAOhB,cA1BhBJ,sDCxBZqB,EAAA,iBAAAzC,GAIT,IACEiB,EADFjB,EAHJ0C,KACEC,OAAUC,MAGKC,OACP,SAAAvB,GAAA,mBAAAA,EAAAwB,KAAcA,4BADPvB,IAEV,SAAAwB,GAAI,OAAIA,EAAJD,OAEX,OAAOxC,OAAAC,EAAA,EAAAD,CAAAU,EAAA,CAAUC,SAAUA,KATd,IAYF+B,EAAN","file":"component---node-modules-gatsby-theme-digital-garden-portfolio-src-templates-projects-js-8a5fb5b3e99a14092290.js","sourcesContent":["import React from 'react'\nimport { css } from 'theme-ui'\n\nexport default ({ ratio = 3 / 4, src, ...props }) => (\n  <div\n    {...props}\n    css={css({\n      width: '100%',\n      height: 0,\n      paddingBottom: ratio * 100 + '%',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundImage: `url(${src})`\n    })}\n  />\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Styled, css } from 'theme-ui'\n\nimport Layout from '../../components/layout'\nimport BackgroundImage from '../../components/background-image'\nimport { SEO } from '../../components/seo'\nimport useOptions from '../../use-options'\n\nexport default ({ projects }) => (\n  <Layout>\n    <SEO\n      title={\n        useOptions().projectsPath\n          ? useOptions().projectsPath.slice(1)\n          : 'Projects'\n      }\n    />\n    <ul\n      css={{\n        listStyle: 'none',\n        padding: 0,\n        margin: 0,\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'stretch'\n      }}\n    >\n      {projects.map(project => (\n        <li\n          key={project.id}\n          css={{\n            flexGrow: 1,\n            flexShrink: 0,\n            flexBasis: 256,\n            padding: 32\n          }}\n        >\n          <Link\n            to={project.frontmatter.path}\n            css={theme => ({\n              display: 'block',\n              color: 'inherit',\n              textDecoration: 'none'\n            })}\n          >\n            <BackgroundImage src={project.frontmatter.image} />\n            <Styled.h3\n              css={css({\n                mb: 0\n              })}\n            >\n              {project.frontmatter.title}\n            </Styled.h3>\n            <Styled.p css={css({ m: 0 })}>{project.frontmatter.title}</Styled.p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n)\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Projects from '../components/projects'\n\nexport default ({\n  data: {\n    allMdx: { edges }\n  }\n}) => {\n  const projects = edges\n    .filter(({ node }) => node.parent.sourceInstanceName === 'projects')\n    .map(edge => edge.node)\n\n  return <Projects projects={projects} />\n}\n\nexport const pageQuery = graphql`\n  query ProjectList {\n    allMdx(sort: { fields: [frontmatter___order], order: ASC }) {\n      edges {\n        node {\n          id\n          parent {\n            ... on File {\n              name\n              sourceInstanceName\n            }\n          }\n          frontmatter {\n            title\n            path\n            description\n            image\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}