{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-digital-garden/src/gatsby-theme-digital-garden-blog/components/post.js","webpack:///./node_modules/gatsby-theme-digital-garden-blog/src/templates/post.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-theme-digital-garden/node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/gatsby-theme-digital-garden/node_modules/gatsby-plugin-mdx/context.js"],"names":["post","_ref","_ref$data$post","data","_ref$data$post$frontm","frontmatter","title","description","body","Object","core_browser_esm","layout","seo","index_esm","h1","mdx_renderer_default","a","__webpack_require__","d","__webpack_exports__","pageQuery","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","result","Function","call","React","require","useMDXComponents","mdx","useMDXScope","module","scope","components","children","props","_objectWithoutPropertiesLoose","mdxComponents","mdxScope","fullScope","_objectSpread","keys","values","map","key","End","_construct","concat","_toConsumableArray","fn","createElement","GatsbyMDXScopeContext","createContext","contextScope","useContext","MDXScopeProvider","__mdxScope","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Provider","value"],"mappings":"gKAsBAA,EAfa,SAAAC,GAAA,IAAAC,EAAAD,EAAAE,KAAAH,KAAAI,EAAAF,EAAAG,YAGQC,EAHRF,EAAAE,MAGeC,EAHfH,EAAAG,YAIPC,EAJON,EAAAM,KAAA,OAQXC,OAAAC,EAAA,EAAAD,CAAAE,EAAA,OACEF,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAAKN,MAALA,EAAmBC,YAAaA,IAChCE,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAADC,GAAA,KAFFR,GAGEG,OAAAC,EAAA,EAAAD,CAAAM,EAAAC,EAAA,KAXSR,KCLbS,EAAAC,EAAAC,EAAA,8BAAAC,IAEAD,EAAA,cAEaC,EAAN,iCCLP,IAAAC,EAAcJ,EAAQ,GACtBK,EAAaL,EAAQ,IACrBM,EAAgBN,EAAQ,IACxBO,EAAeP,EAAQ,IACvBQ,EAAeR,EAAQ,IACvBS,EAAYT,EAAQ,IACpBU,EAAWV,EAAQ,KACnBW,GAAkBX,EAAQ,IAAWY,SAAA,IAAeC,UAIpDC,EAAAL,EAAA,WACA,SAAAM,KACA,QAAAJ,EAAA,aAAiD,GAAAI,kBAEjDC,GAAAP,EAAA,WACAE,EAAA,gBAGAP,IAAAa,EAAAb,EAAAW,GAAAD,GAAAE,GAAA,WACAH,UAAA,SAAAK,EAAAC,GACAb,EAAAY,GACAX,EAAAY,GACA,IAAAC,EAAAC,UAAAC,OAAA,EAAAJ,EAAAZ,EAAAe,UAAA,IACA,GAAAL,IAAAF,EAAA,OAAAH,EAAAO,EAAAC,EAAAC,GACA,GAAAF,GAAAE,EAAA,CAEA,OAAAD,EAAAG,QACA,kBAAAJ,EACA,kBAAAA,EAAAC,EAAA,IACA,kBAAAD,EAAAC,EAAA,GAAAA,EAAA,IACA,kBAAAD,EAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,kBAAAD,EAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,IAAAI,EAAA,OAEA,OADAA,EAAAC,KAAAC,MAAAF,EAAAJ,GACA,IAAAT,EAAAe,MAAAP,EAAAK,IAGA,IAAAG,EAAAN,EAAAO,UACAC,EAAAvB,EAAAG,EAAAkB,KAAAlC,OAAAmC,WACAE,EAAAC,SAAAL,MAAAM,KAAAb,EAAAU,EAAAT,GACA,OAAAX,EAAAqB,KAAAD,koFC5CA,IAAMI,EAAQC,EAAd,KACkCA,EAAO,IAAjCC,qBAAkBC,QAClBC,EAAgBH,EAAO,KAAvBG,YAERC,UAAiB,SAAArD,GAKd,IAJDsD,EAICtD,EAJDsD,MACAC,EAGCvD,EAHDuD,WACAC,EAECxD,EAFDwD,SACGC,sIACFC,CAAA1D,EAAA,mCACK2D,EAAgBT,EAAtBK,GACMK,EAAWR,EAAjBE,GAEA,IAAAE,EACE,YAGF,IAAMK,EAASC,EAAA,CAGbd,MAHaA,EAIbG,OAZDS,GAiBKG,EAAOvD,YAAbqD,GACMG,EAASD,EAAAE,IAAS,SAAAC,GAAG,OAAIL,EAAJK,KAGrBC,EAFEC,EAAAtB,SAAA,QAAAuB,OAAAC,EAAAP,GAAA,IAARP,KAEYe,2BAAZP,KACA,OAAOhB,EAAAwB,cAAAL,EAAAL,EAAA,CAA2BP,WAAYI,GAA9CF,yJC7BIgB,EAAwBC,wBAA9B,IAEatB,EAAc,SAAAE,GACzB,IAAMqB,EAAeC,qBAArBH,GACA,OAAOnB,GAAPqB,GAGWE,EAAmB,SAAA7E,GAAA,IAAG8E,EAAH9E,EAAA8E,WAAetB,EAAfxD,EAAAwD,SAAA,OAC9BhD,OAAAuE,EAAA,EAAAvE,CAACiE,EAADO,SAAA,CAAgCC,MAAOH,GADTtB","file":"component---node-modules-gatsby-theme-digital-garden-blog-src-templates-post-js-2402bd4ddfacd39110b6.js","sourcesContent":["import React from 'react'\nimport MDXRenderer from 'gatsby-plugin-mdx/mdx-renderer'\nimport { Styled } from 'theme-ui'\n\nimport Layout from '../../components/layout'\nimport { SEO } from '../../components/seo'\n\nconst Post = ({\n  data: {\n    post: {\n      frontmatter: { title, description },\n      body\n    }\n  }\n}) => (\n  <Layout>\n    <SEO title={title} description={description} />\n    <Styled.h1>{title}</Styled.h1>\n    <MDXRenderer>{body}</MDXRenderer>\n  </Layout>\n)\n\nexport default Post\n","import { graphql } from 'gatsby'\n\nimport Post from '../components/post'\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query($id: String!, $title: String) {\n    post: mdx(id: { eq: $id }) {\n      id\n      frontmatter {\n        title\n        description\n      }\n      body\n    }\n    image: ogImage {\n      src(text: $title)\n    }\n  }\n`\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(\"react\");\nconst { useMDXComponents, mdx } = require(\"@mdx-js/react\");\nconst { useMDXScope } = require(\"./context\");\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components);\n  const mdxScope = useMDXScope(scope);\n\n  if (!children) {\n    return null;\n  }\n\n  const fullScope = {\n    // React is here just in case the user doesn't pass them in\n    // in a manual usage of the renderer\n    React,\n    mdx,\n    ...mdxScope\n  };\n\n  // children is pre-compiled mdx\n  const keys = Object.keys(fullScope);\n  const values = keys.map(key => fullScope[key]);\n  const fn = new Function(\"_fn\", ...keys, `${children}`);\n\n  const End = fn({}, ...values);\n  return React.createElement(End, { components: mdxComponents, ...props });\n};\n","import React, { createContext, useContext } from \"react\";\n\nconst GatsbyMDXScopeContext = createContext({});\n\nexport const useMDXScope = scope => {\n  const contextScope = useContext(GatsbyMDXScopeContext);\n  return scope || contextScope;\n};\n\nexport const MDXScopeProvider = ({ __mdxScope, children }) => (\n  <GatsbyMDXScopeContext.Provider value={__mdxScope}>\n    {children}\n  </GatsbyMDXScopeContext.Provider>\n);\n"],"sourceRoot":""}