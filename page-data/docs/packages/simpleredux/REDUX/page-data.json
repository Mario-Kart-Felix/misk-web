{"componentChunkName":"component---node-modules-gatsby-theme-digital-garden-src-templates-note-js","path":"/docs/packages/simpleredux/REDUX","webpackCompilationHash":"369cb285a96f7ad7d476","result":{"data":{"note":{"id":"65d08d4f-7b3e-5343-975b-b10f83949156","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"nav\", {\n    \"className\": \"toc\"\n  }, mdx(\"ol\", _extends({\n    parentName: \"nav\"\n  }, {\n    \"className\": \"toc-level toc-level-1\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h1\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h1\",\n    \"href\": \"#what-is-a-ducks-module\"\n  }), \"What is a Ducks module\"), mdx(\"ol\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-level toc-level-2\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h2\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h2\",\n    \"href\": \"#first-some-terminology\"\n  }), \"First, some terminology\")), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h2\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h2\",\n    \"href\": \"#why-would-you-need-a-ducks-module\"\n  }), \"Why would you need a Ducks module\")))))), mdx(\"h1\", {\n    \"id\": \"what-is-a-ducks-module\"\n  }, \"What is a Ducks module\"), mdx(\"p\", null, \"A Ducks module contains many different parts that work together to provide a complete\\nprocessing unit for a Redux-Sagas state domain.\"), mdx(\"h2\", {\n    \"id\": \"first-some-terminology\"\n  }, \"First, some terminology\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"State: A central store of the React app's knowledge at a given point in time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redux: unidirectional data flow state management for React (in the spirit of Flux)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redux-Sagas: a Redux pattern that uses Actions, Dispatchers, Sagas, and Reducers to handle state updates\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Actions: small context objects used to pass around and process state changes. In Misk, they will by default have fields for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"data\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"error\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"loading\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"success\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dispatchers: An object that has functions that dispatch actions. The Dispatcher has one function for each action. The advantages of a Dispatcher and dispatching functions are as follows:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Import a single Dispatcher object and have access to all action-dispatching functions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dispatching function ensures consistent formatting for emitted actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dispatching function can handle any marshalling or default values to set in the action\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sagas: A generating function that handles actions asynchronously.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each Duck Saga is registered with the tab rootSaga and has an array of take{Latest|Every} functions that bind an action to a handling function.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The handling function is also an asynchronous generating function that does any web requests or blocking state change computation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In the process of computation, it can yield other actions to signal success, failure, or progress which will consequently be picked up and handled asynchronously by other handlers.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reducers: Maintain up to date state by continuing to merge in changes as they come from dispatched actions.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each Duck Reducer is registered with the tab's rootReducer to provide a single merged reducer for all state change.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each Duck Reducer effectively is responsible for a domain or keyspace of the global state object.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The structure and typing of this state domain is defined in the Duck State Interface.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Interface: a Typescript specific syntax that allows definition of an object interface with expected keys and value types\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ducks: a Redux-Sagas pattern that puts all elements in a single Ducks module file instead of different directories\")), mdx(\"h2\", {\n    \"id\": \"why-would-you-need-a-ducks-module\"\n  }, \"Why would you need a Ducks module\"), mdx(\"p\", null, \"By convention in Misk, state is not ever updated directly from a React container or component.\"), mdx(\"p\", null, \"This idiom is called unidirectional data flow and it makes for easier state management in React apps.\"), mdx(\"p\", null, \"The current state is always displayed by the React container/component but any changes are handled by\\na Ducks module. This separates the View and Controller functionality of a React app.\"), mdx(\"p\", null, \"Instead it is updated through a Ducks module. This ensures predictable and debuggable state updates\\nbecause a single rootSaga and rootReducer handle all state change Actions across the entire Misk tab.\"), mdx(\"p\", null, \"The Ducks pattern also makes use of modern Javascript generating functions which allow for asynchronous\\nprocessing of all non-View related computation letting you build non-View-blocking React apps.\"), mdx(\"p\", null, \"Pro tip: Use the Redux DevTools Chrome plugin to see all state changes in your tab as they occur.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\"\n  }), \"https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\")), mdx(\"p\", null, \"Using the Redux-Sagas Ducks pattern helps developers easily build Misk tabs with minimal\\nfront end React, Redux, or Sagas knowledge.\"), mdx(\"p\", null, \"Getting Started\"), mdx(\"p\", null, \"If your tab ever retrieves resources from the Web or from Misk server, you need a Ducks module.\"), mdx(\"p\", null, \"Your Ducks module will need the required elements (Actions, Dispatchers, Sagas, Reducers, State Interface)\"), mdx(\"p\", null, \"Specifically it will need to export:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dispatcher object: contains all of your dispatcher functions that trigger Actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"watchSagas function: which is your Ducks Saga for handing off Actions to the correct handling function\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reducer: to handle merging in state changes to the domain of the state your Ducks manages\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"State Interface: Typescript interface for what your Ducks state contains\")), mdx(\"p\", null, \"These must all be imported into src/ducks/index.ts and wired up to respective rootReducer, rootSaga,\\nand global State Interfaces.\"), mdx(\"p\", null, \"##Displaying State\"), mdx(\"p\", null, \"In a Container, you can wire up your Dispatcher object and Ducks State to be props accessible in the container.\"), mdx(\"p\", null, \"This is done using mapStateToProps and mapDispatchToProps functions.\"), mdx(\"p\", null, \"Your props will then always have the up to date state which you can render with regular React render(),\\nand it will always have a mounted function from your Dispatcher object so you can trigger a given action\\nto kick off a Ducks flow to retrieve data or do other asynchronous computation.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fileAbsolutePath":"/Users/adrw/Development/cash-services/misk-web/docs/docs/packages/simpleredux/REDUX.md"},"image":{"src":"/static/og-image/redux-e9f9b94985.png"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"65d08d4f-7b3e-5343-975b-b10f83949156","parent":{"name":"REDUX","base":"REDUX.md","relativePath":"packages/simpleredux/REDUX.md","sourceInstanceName":"notes"},"title":"REDUX"}}}