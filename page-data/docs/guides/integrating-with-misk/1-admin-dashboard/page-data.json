{"componentChunkName":"component---node-modules-gatsby-theme-digital-garden-src-templates-note-js","path":"/docs/guides/integrating-with-misk/1-admin-dashboard","webpackCompilationHash":"bd895fc6c0aad7e9179e","result":{"data":{"note":{"id":"f9b81d6f-23af-5de2-b3a4-22304374c5d1","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"nav\", {\n    \"className\": \"toc\"\n  }, mdx(\"ol\", _extends({\n    parentName: \"nav\"\n  }, {\n    \"className\": \"toc-level toc-level-1\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h1\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h1\",\n    \"href\": \"#admin-dashboard\"\n  }), \"Admin Dashboard\"), mdx(\"ol\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-level toc-level-2\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h2\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h2\",\n    \"href\": \"#multibindings\"\n  }), \"Multibindings\"), mdx(\"ol\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-level toc-level-3\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h3\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h3\",\n    \"href\": \"#dashboard-tab-binding\"\n  }), \"Dashboard Tab Binding\")), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h3\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h3\",\n    \"href\": \"#dashboard-tab-binding-with-access-annotation\"\n  }), \"Dashboard Tab Binding with Access Annotation\")), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h3\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h3\",\n    \"href\": \"#web-tab-resource-module-binding\"\n  }), \"Web Tab Resource Module Binding\")), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h3\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h3\",\n    \"href\": \"#admindashboardtestingmodule\"\n  }), \"AdminDashboardTestingModule\")), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h3\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h3\",\n    \"href\": \"#gradle-sourcesets-servicebuildgradle\"\n  }), \"Gradle Sourcesets (service/build.gradle)\")))), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h2\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h2\",\n    \"href\": \"#project-structure-in-a-misk-service\"\n  }), \"Project Structure in a Misk Service\")))))), mdx(\"h1\", {\n    \"id\": \"admin-dashboard\"\n  }, \"Admin Dashboard\"), mdx(\"p\", null, \"The Misk Admin Dashboard comes for free in Misk and is accessible at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/_admin/\"), \" if the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AdminDashboardModule\"), \" is installed.\"), mdx(\"p\", null, \"The admin dashboard comes with tabs like Config and Web-Actions that provide visibility and administrative tools to a running Misk service.\"), mdx(\"p\", null, \"The admin dashboard is also extensible! You can add custom tabs to provide service specific operational or adminsitrative tools with the multibindings outlined below.\"), mdx(\"p\", null, \"Get all the multibindings for your tab with the included Misk-Web CLI command\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-shell\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"$\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"bash\"\n  }), \" miskweb misk\"), \"\\n\")), mdx(\"h2\", {\n    \"id\": \"multibindings\"\n  }, \"Multibindings\"), mdx(\"p\", null, \"Add the following multibindings to a KAbstractModule in a Misk service.\"), mdx(\"p\", null, \"If you have many tabs, it may make sense to create a dedicated \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{Service Name}AdminDashboardModule.kt\")), mdx(\"p\", null, \"Note that there are areas in the generated multibindings below that you will need to fill out or customize to your specific use case.\"), mdx(\"p\", null, \"The generated bindings assume you want to add your tab to the default Misk Admin Dashboard available at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/_admin/\"), \" in a Misk service.\"), mdx(\"h3\", {\n    \"id\": \"dashboard-tab-binding\"\n  }, \"Dashboard Tab Binding\"), mdx(\"p\", null, \"The Dashboard Tab multibinding adds a menu link for your tab to the Misk Admin Dashboard.\"), mdx(\"p\", null, \"It is organized by link category and can also carry authentication permissions so that tabs only show up to appropriately authenticated users.\"), mdx(\"p\", null, \"Example Dashboard Tab Binding. Generate your tab's bindings with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ miskweb misk\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// DinoAdminDashboardModule.kt\"), \"\\n\\nmultibind<DashboardTab, AdminDashboardTab>().toInstance(DashboardTab(\\n  name = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Dino Tab\\\"\"), \",\\n  slug = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"dino-tab\\\"\"), \",\\n  url_path_prefix = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/_admin/dino-tab/\\\"\"), \",\\n  category = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Dino Service Admin\\\"\"), \",\\n  capabilities = setOf(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"brontosaurus\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"dino-service-administrators\\\"\"), \")\\n))\\n\")), mdx(\"h3\", {\n    \"id\": \"dashboard-tab-binding-with-access-annotation\"\n  }, \"Dashboard Tab Binding with Access Annotation\"), mdx(\"p\", null, \"Insted of explicitly coding the list of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"capabilities\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"services\"), \" in the Dashboard Tab binding (above), a Dashboard Tab can be bound with an existing Access Annotation.\"), mdx(\"p\", null, \"Access Annotations are a pattern in Misk where an annotation is associated to an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AccessAnnotationEntry\"), \" and installed as follows:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// DinoAccessModule.kt\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Qualifier\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-meta\"\n  }), \"@Target(AnnotationTarget.FIELD, AnnotationTarget.FUNCTION)\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"annotation\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"DinoServiceAdministratorAccess\")), \"\\n\\nmultibind<AccessAnnotationEntry>().toInstance(\\n  AccessAnnotationEntry<DinoServiceAdministratorAccess>(\\n    capabilities = listOf(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"brontosaurus\\\"\"), \", \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"dino-service-administrators\\\"\"), \")))\\n\")), mdx(\"p\", null, \"To use an Access Annotation to set the same authentication on web actions and dashboard tabs, you can use a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DashboardTabProvider\"), \" binding as below.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// DinoAdminDashboardModule.kt\"), \"\\n\\nmultibind<DashboardTab, AdminDashboardTab>().toProvider(\\n  DashboardTabProvider<DinoServiceAdministratorAccess>(\\n    name = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Dino Tab\\\"\"), \",\\n    slug = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"dino-tab\\\"\"), \",\\n    url_path_prefix = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/_admin/dino-tab/\\\"\"), \",\\n    category = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"Dino Service Admin\\\"\"), \",\\n  ))\\n\")), mdx(\"h3\", {\n    \"id\": \"web-tab-resource-module-binding\"\n  }, \"Web Tab Resource Module Binding\"), mdx(\"p\", null, \"The Web Tab Resource Module multibinding tells Misk where to find the compiled tab code. It lives in two places:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In Classpath/JAR path after running \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"$ miskweb build\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Served from Webpack-Dev-Server over localhost on a specific port when running \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"$ miskweb start\"))), mdx(\"p\", null, \"Note: the port must be unique within your service's tabs if you want to ever have multiple tabs in development simultaneously.\"), mdx(\"p\", null, \"Example Web Tab Resource Module Binding. Generate your tab's bindings with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ miskweb misk\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// DinoAdminDashboardModule.kt\"), \"\\n\\ninstall(WebTabResourceModule(\\n    environment = environment,\\n    slug = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"dino-tab\\\"\"), \",\\n    web_proxy_url = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"http://localhost:4242/\\\"\"), \"\\n  ))\\n\")), mdx(\"h3\", {\n    \"id\": \"admindashboardtestingmodule\"\n  }, \"AdminDashboardTestingModule\"), mdx(\"p\", null, \"To run your Misk Admin Dashboard in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DEVELOPMENT\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TESTING\"), \" environments, you'll need to add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AdminDashboardTestingModule\"), \" to your primary service \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"applicationModules()\"), \" function.\"), mdx(\"p\", null, \"It will look something like below.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// DinoService.kt\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"fun\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"main\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(args: \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"Array\"), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"String\"), \">)\")), \" {\\n  ServiceBuilder.getMiskApplication(::applicationModules).run(args)\\n}\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"fun\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-title\"\n  }), \"applicationModules\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"(serviceBuilder: \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"ServiceBuilder\"), \"<\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-type\"\n  }), \"DinoConfig\"), \">)\")), \":\\n  List<KAbstractModule> {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"val\"), \" modules = mutableListOf(\\n      ConfigModule.create(\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"dino\\\"\"), \", serviceBuilder.config),\\n      DinoAccessModule(),\\n      DinoActionModule(),\\n      DinoAdminDashboardModule(serviceBuilder.env)\\n      DinoPersistenceModule(serviceBuilder.config),\\n      EnvironmentModule(serviceBuilder.env)\\n  )\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"when\"), \" (serviceBuilder.env) {\\n    Environment.PRODUCTION, Environment.STAGING -> {\\n      modules.addAll(listOf(\\n          JurassicRealModule(serviceBuilder.env,\\n            serviceBuilder.config.jurassic)\\n      ))\\n    }\\n    Environment.DEVELOPMENT, Environment.TESTING -> {\\n      modules.addAll(listOf(\\n          JurassicTestingModule(serviceBuilder.env,\\n            serviceBuilder.config.jurassic),\\n          AdminDashboardTestingModule(serviceBuilder.env)\\n      ))\\n    }\\n  }\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" modules\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"gradle-sourcesets-servicebuildgradle\"\n  }, \"Gradle Sourcesets (service/build.gradle)\"), mdx(\"p\", null, \"You'll need to add your tabs to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build.gradle\"), \" main.resources so that they are wrapped up in your service jar. Add the Gradle stanza below.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-groovy\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// service/build.gradle (Groovy)\"), \"\\n\\nsourceSets {\\n  main.resources {\\n    srcDirs += [\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'web/tabs/dino-tab/lib'\"), \"\\n    ]\\n    exclude \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"'**/node_modules'\"), \"\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"project-structure-in-a-misk-service\"\n  }, \"Project Structure in a Misk Service\"), mdx(\"p\", null, \"Misk-Web tabs best live in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"web/tabs\"), \" directory at the same level of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \".\"), mdx(\"p\", null, \"See below for an example service project structure with a few tabs.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-crystal\"\n  }), \"  trex-service/\\n    client/\\n    service/\\n      build/\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"out\"), \"/\\n      src/\\n      web/\\n        tabs/\\n          trexangermanagement/\\n            ...\\n          trexhealthcheck/\\n            ...\\n          trexfoodlog/\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-class\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"lib\"), \"/\"), \"\\n            node_modules/\\n            src/\\n              ...\\n              index.ts\\n            package.json\\n            ...\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fileAbsolutePath":"/Users/adrw/Development/cash-services/misk-web/docs/docs/guides/integrating-with-misk/1-admin-dashboard.mdx"},"image":{"src":"/static/og-image/1-admin-dashboard-b6b75e7a92.png"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"f9b81d6f-23af-5de2-b3a4-22304374c5d1","parent":{"name":"1-admin-dashboard","base":"1-admin-dashboard.mdx","relativePath":"guides/integrating-with-misk/1-admin-dashboard.mdx","sourceInstanceName":"notes"},"title":"1-admin-dashboard"}}}