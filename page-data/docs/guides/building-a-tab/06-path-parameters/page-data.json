{"componentChunkName":"component---node-modules-gatsby-theme-digital-garden-src-templates-note-js","path":"/docs/guides/building-a-tab/06-path-parameters","webpackCompilationHash":"dae973de06f7bf892fa0","result":{"data":{"note":{"id":"02be1d77-1d97-5979-88e2-4a8a93a0aa2a","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"nav\", {\n    \"className\": \"toc\"\n  }, mdx(\"ol\", _extends({\n    parentName: \"nav\"\n  }, {\n    \"className\": \"toc-level toc-level-1\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h1\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h1\",\n    \"href\": \"#path-parameters\"\n  }), \"Path Parameters\"), mdx(\"ol\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-level toc-level-2\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h2\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h2\",\n    \"href\": \"#how-to-use-path-parameters\"\n  }), \"How to use Path Parameters\")), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h2\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h2\",\n    \"href\": \"#irouterprovidedprops\"\n  }), \"IRouterProvidedProps\")), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h2\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h2\",\n    \"href\": \"#inclusion-in-ducks\"\n  }), \"Inclusion in Ducks\")))))), mdx(\"h1\", {\n    \"id\": \"path-parameters\"\n  }, \"Path Parameters\"), mdx(\"p\", null, \"Misk-Web uses \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reacttraining.com/react-router/\"\n  }), \"React Router\"), \" under the hood to handle routing.\"), mdx(\"p\", null, \"React Router implicitly inserts 3 important props into components that are rendered within a route (which will likely be all components that are in a Misk-Web tab).\"), mdx(\"p\", null, \"These three are (and are documented fully in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reacttraining.com/react-router/\"\n  }), \"React Router docs\"), \"):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"history\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"location\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"match: useful for parsing out path parameters\")), mdx(\"h2\", {\n    \"id\": \"how-to-use-path-parameters\"\n  }, \"How to use Path Parameters\"), mdx(\"p\", null, \"Path parmeters are useful for a page that references a specific element of a set.\"), mdx(\"p\", null, \"For example, consider a component that is a list of articles has a link to edit each specific article. To support permalinking, the path for the edit article component includes the article ID as a path parameter.\"), mdx(\"p\", null, \"To set this up, you will need to add a route to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"routes/index.tsx\"), \" in your tab with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":\"), \" prefixed path parameter variable like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":articleId\"), \".\"), mdx(\"p\", null, \"Note the ordering of routes matter, put the most specific route first so that it matches first.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-ts\"\n  }), \"  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// routes/index.tsx\"), \"\\n  <Switch>\\n    <Route path=\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/articles/edit/:articleId/\\\"\"), \" component={EditContainer} />\\n    <Route path=\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"/articles\\\"\"), \" component={ArticlesContainer} />\\n  <\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/Switch>\\n\\n\"))), mdx(\"p\", null, \"Use the path parameter variable in your component as following.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-ts\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// containers/EditContainer.tsx\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" { Spinner } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"from\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"@blueprintjs/core\\\"\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" { IRouterProvidedProps } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"from\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"@misk/simpleredux\\\"\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"const\"), \" EditContainer = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"props: IRouterProvidedProps\"), \") =>\"), \" {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"const\"), \" { articleId } = props.match && props.match.params\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"if\"), \" (articleId) {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" (\\n      <h1>Edit {articleId}<\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-regexp\"\n  }), \"/h1>\\n      <EditForm articleId={articleId} /\"), \">\\n    )\\n  } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"else\"), \" {\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"return\"), \" <Spinner />\\n  }\\n}\\n\\n\")), mdx(\"p\", null, \"Note the use of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IRouterProvidedProps\"), \" to get typed access to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"match\"), \" props.\"), mdx(\"h2\", {\n    \"id\": \"irouterprovidedprops\"\n  }, \"IRouterProvidedProps\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IRouterProvidedProps\"), \" is provided as part of the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/cashapp/misk-web/blob/9b31fbad9ebe36d582cec525fc51a200e270c9bf/packages/%40misk/simpleredux/src/utilities.ts#L31-L41\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"@misk/simpleredux\"), \" library\"), \". Since all of the props are provided optionally by React Router, all members are nullable null checking must be performed on use.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-TS\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// @misk/simpleredux/utilities\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" IRouterProvidedProps {\\n  history?: History\\n  location?: Location\\n  match?: match\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"inclusion-in-ducks\"\n  }, \"Inclusion in Ducks\"), mdx(\"p\", null, \"You can include \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IRouterProvidedProps\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ducks/index.ts\"), \" default provided props for your tab as follows.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-TS\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// ducks/index.ts\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" {\\n  IDispatchSimpleForm,\\n  IDispatchSimpleNetwork,\\n  IRouterProvidedProps\\n} \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"from\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"@misk/simpleredux\\\"\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// ...\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"/**\\n * Dispatcher\\n */\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" IDispatchProps\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"extends\"), \" IDispatchPalette,\\n  IDispatchSimpleForm,\\n  IDispatchSimpleNetwork,\\n  IRouterProvidedProps { }\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// ...\"), \"\\n\")), mdx(\"p\", null, \"This makes for easy use of React Router provided props in Redux connected containers since they come in the already included \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IDispatchProps\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-ts\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// containers/TabContainer.tsx\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" { connect } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"from\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"react-redux\\\"\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" { IDispatchProps, IState, mapDispatchToProps, mapStateToProps } \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"from\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"../ducks\\\"\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"const\"), \" TabContainer = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"props: IDispatchProps & IState\"), \") =>\"), \" {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// ...\"), \"\\n}\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"default\"), \" connect(\\n  mapStateToProps,\\n  mapDispatchToProps\\n)(TabContainer)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fileAbsolutePath":"/Users/adrw/Development/cash-services/misk-web/docs/docs/guides/building-a-tab/06-path-parameters.mdx"},"image":{"src":"/static/og-image/06-path-parameters-13f2efb7ac.png"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"02be1d77-1d97-5979-88e2-4a8a93a0aa2a","parent":{"name":"06-path-parameters","base":"06-path-parameters.mdx","relativePath":"guides/building-a-tab/06-path-parameters.mdx","sourceInstanceName":"notes"},"title":"06-path-parameters"}}}