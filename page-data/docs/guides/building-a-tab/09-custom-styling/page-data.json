{"componentChunkName":"component---node-modules-gatsby-theme-digital-garden-src-templates-note-js","path":"/docs/guides/building-a-tab/09-custom-styling","webpackCompilationHash":"89e7435afac42a054a66","result":{"data":{"note":{"id":"b1254c45-5c10-569b-a57d-f02306210680","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"nav\", {\n    \"className\": \"toc\"\n  }, mdx(\"ol\", _extends({\n    parentName: \"nav\"\n  }, {\n    \"className\": \"toc-level toc-level-1\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h1\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h1\",\n    \"href\": \"#custom-styling\"\n  }), \"Custom Styling\"), mdx(\"ol\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-level toc-level-2\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h2\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h2\",\n    \"href\": \"#navbar\"\n  }), \"Navbar\")), mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"className\": \"toc-item toc-item-h2\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"toc-link toc-link-h2\",\n    \"href\": \"#todos\"\n  }), \"TODOs\")))))), mdx(\"h1\", {\n    \"id\": \"custom-styling\"\n  }, \"Custom Styling\"), mdx(\"h2\", {\n    \"id\": \"navbar\"\n  }, \"Navbar\"), mdx(\"p\", null, \"The Navbar component from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@misk/core\"), \" is themable. It expects the following theme object to provided by props or will fall back to the default theme.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-ts\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"interface\"), \" ITheme {\\n  bannerLinkHover: color | \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"string\"), \"\\n  bannerText: color | \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"string\"), \"\\n  button: color | \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"string\"), \"\\n  buttonHover: color | \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"string\"), \"\\n  categoryText: color | \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"string\"), \"\\n  environmentToColor: \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"environment: Environment\"), \") =>\"), \" color | \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"string\"), \"\\n  navbarBackground: color | \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"string\"), \"\\n  navbarLinkHover: color | \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"string\"), \"\\n  navbarText: color | \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"string\"), \"\\n}\\n\")), mdx(\"p\", null, \"Note the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"environmentToColor\"), \" field is a function that accepts the current runtime \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Environment\"), \" and then returns a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color | string\"), \". The following example includes a custom \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"environmentToColor\"), \" which accepts a lookup map for ease of use.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"hljs language-ts\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"import\"), \" {\\n  color,\\n  environmentToColor,\\n  IEnvironmentToColorLookup,\\n  ITheme\\n} \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"from\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-string\"\n  }), \"\\\"@misk/core\\\"\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"const\"), \" dinoEnvironmentColorLookup: IEnvironmentToColorLookup = {\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"default\"), \": color.cadet,\\n  DEVELOPMENT: color.platinum,\\n  TESTING: color.purple,\\n  STAGING: color.yellow,\\n  PRODUCTION: color.red\\n}\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"const\"), \" dinoTheme: ITheme = {\\n  ...defaultTheme,\\n  environmentToColor: environmentToColor(dinoEnvironmentColorLookup),\\n  navbarBackground: color.blue\\n}\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-keyword\"\n  }), \"const\"), \" MainComponent = \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-function\"\n  }), \"(\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-params\"\n  }), \"props: \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"hljs-built_in\"\n  }), \"any\")), \") =>\"), \" (\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"//...\"), \"\\n  <Navbar\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// ...\"), \"\\n    theme={dinoTheme}\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"// ...\"), \"\\n  />\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"hljs-comment\"\n  }), \"//...\"), \"\\n)\\n\")), mdx(\"h2\", {\n    \"id\": \"todos\"\n  }, \"TODOs\"), mdx(\"p\", null, \"In the unfortunate event that custom styling is required, we recommend and include \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@emotion\"), \" for CSS-in-JS styling that also plays well with Jest snapshot tests.\"), mdx(\"p\", null, \"Review the css props, JSX pragma,... punt to the Emotion docs.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fileAbsolutePath":"/Users/adrw/Development/cash-services/misk-web/docs/docs/guides/building-a-tab/09-custom-styling.mdx"},"image":{"src":"/static/og-image/09-custom-styling-6c1e5ebfd7.png"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"b1254c45-5c10-569b-a57d-f02306210680","parent":{"name":"09-custom-styling","base":"09-custom-styling.mdx","relativePath":"guides/building-a-tab/09-custom-styling.mdx","sourceInstanceName":"notes"},"title":"09-custom-styling"}}}