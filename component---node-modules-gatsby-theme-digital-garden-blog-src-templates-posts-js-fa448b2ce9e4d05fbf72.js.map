{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-digital-garden/src/gatsby-theme-digital-garden-blog/components/posts.js","webpack:///./node_modules/gatsby-theme-digital-garden-blog/src/templates/posts.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js"],"names":["components_posts","_ref","posts","Object","core_browser_esm","layout","seo","title","useOptions","index_esm","ul","map","post","li","key","id","a","as","gatsby_browser_entry","to","path","__webpack_exports__","data","allMdx","edges","filter","_ref2","node","edge","pageQuery","m","module","require","default","location","pageResources","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","_page_renderer__WEBPACK_IMPORTED_MODULE_7__","_objectSpread","json","loader","enqueue","React"],"mappings":"gKAQeA,EAAA,SAAAC,GAAA,IAAGC,EAAHD,EAAAC,MAAA,OACbC,OAAAC,EAAA,EAAAD,CAAAE,EAAA,OACEF,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GACEC,MACEC,wBAAyBA,8BAAzBA,GAA2D,YAG/DL,OAAAC,EAAA,EAAAD,CAACM,EAAA,EAADC,GAAA,KACGR,EAAAS,IAAU,SAAAC,GAAI,OACbT,OAAAC,EAAA,EAAAD,CAACM,EAAA,EAADI,GAAA,CAAWC,IAAKF,EAAKG,IACnBZ,OAAAC,EAAA,EAAAD,CAACM,EAAA,EAADO,EAAA,CAAUC,GAAVC,EAAA,EAAoBC,GAAIP,cAAiBQ,MACtCR,cAHQL,qDCXNc,EAAA,iBAAApB,GAIT,IACEC,EADFD,EAHJqB,KACEC,OAAUC,MAGEC,OACJ,SAAAC,GAAA,gBAAAA,EAAAC,KAAcA,4BADVhB,IAEP,SAAAiB,GAAI,OAAIA,EAAJD,OAEX,OAAOxB,OAAAC,EAAA,EAAAD,CAAAH,EAAA,CAAOE,MAAOA,KATR,IAYF2B,EAAN,iCCjBP,IAAsBC,EAKpBC,WALoBD,EAKWE,EAA/BD,OAL+BD,EAANG,SAAJH,4bCsBvBT,EAAA,QAjByB,SAAApB,GAAiC,IAA9BiC,EAA8BjC,EAA9BiC,SAAUC,EAAoBlC,EAApBkC,cACpC,OAAAA,EAGOC,EAAApB,EAAAqB,cAAAC,EAAA,6UAAAC,CAAA,CACLL,SADKA,EAELC,iBACGA,EAHLK,OAFE,iICOqBC,QAAzBC,QAE2BC,kBAA3B","file":"component---node-modules-gatsby-theme-digital-garden-blog-src-templates-posts-js-fa448b2ce9e4d05fbf72.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Styled } from 'theme-ui'\n\nimport Layout from '../../components/layout'\nimport { SEO } from '../../components/seo'\nimport useOptions from '../../use-options'\n\nexport default ({ posts }) => (\n  <Layout>\n    <SEO\n      title={\n        useOptions().postsPath ? useOptions().postsPath.slice(1) : 'Writing'\n      }\n    />\n    <Styled.ul>\n      {posts.map(post => (\n        <Styled.li key={post.id}>\n          <Styled.a as={Link} to={post.frontmatter.path}>\n            {post.frontmatter.title}\n          </Styled.a>\n        </Styled.li>\n      ))}\n    </Styled.ul>\n  </Layout>\n)\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Posts from '../components/posts'\n\nexport default ({\n  data: {\n    allMdx: { edges }\n  }\n}) => {\n  const posts = edges\n    .filter(({ node }) => node.parent.sourceInstanceName === 'posts')\n    .map(edge => edge.node)\n\n  return <Posts posts={posts} />\n}\n\nexport const pageQuery = graphql`\n  query PostList {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          parent {\n            ... on File {\n              name\n              sourceInstanceName\n            }\n          }\n          frontmatter {\n            title\n            description\n            path\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n"],"sourceRoot":""}